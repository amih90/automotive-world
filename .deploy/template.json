{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "userManagedIdentityName": {
            "type": "String"
        },
        "userManagedIdentityRoleDefinitionIds": {
            "type": "array",
            "metadata": {
                "description": "The IDs of the role definitions to assign to the managed identity. Each role assignment is created at the resource group scope. Role definition IDs are GUIDs. To find the GUID for built-in Azure role definitions, see https://docs.microsoft.com/azure/role-based-access-control/built-in-roles. You can also use IDs of custom role definitions."
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "String"
        },
        "logAnalyticsTableName": {
            "type": "String"
        },
        "applicationInsightsName": {
            "type": "String"
        },
        "storageAccountName": {
            "type": "String"
        },
        "serverfarmName": {
            "type": "String"
        },
        "functionAppName": {
            "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "The name of the Azure Function app."
            }
        },
        "functionSlotName": {
            "defaultValue": "deployment",
            "type": "String",
            "metadata": {
                "description": "The name of the slot for Azure Function app."
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "functionWorkerRuntime": {
            "defaultValue": "dotnet",
            "allowedValues": [
                "dotnet",
                "node",
                "python",
                "java"
            ],
            "type": "String",
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        },
        "functionPlanOS": {
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "type": "String",
            "metadata": {
                "description": "Specifies the OS used for the Azure Function hosting plan."
            }
        },
        "packageUri": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "The zip content url."
            }
        },
        "functionLinuxFxVersion": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Only required for Linux app to represent runtime stack in the format of 'runtime|runtimeVersion'. For example: 'python|3.9'"
            }
        },
        "enableDataConnectorsKind": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "The kind of data connectors that can be deployed via ARM templates are the following: [\"AzureActivityLog\",\"SecurityInsightsSecurityEventCollectionConfiguration\",\"WindowsFirewall\",\"DnsAnalytics\"], Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
            }
        },
        "sentinelWorkbookName": {
            "type": "String",
            "metadata": {
                "description": "Microsoft Sentinel workbook name"
            }
        },
        "automationLogicAppName": {
            "type": "String",
            "metadata": {
                "description": "Automation Logic App name"
            }
        }
    },
    "variables": {
        "copy": [
            {
                "name": "userManagedIdentityRoleAssignmentsDefinitionIds",
                "count": "[length(parameters('userManagedIdentityRoleDefinitionIds'))]",
                "input": {
                    "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName')), resourceGroup().id, parameters('userManagedIdentityRoleDefinitionIds')[copyIndex('userManagedIdentityRoleAssignmentsDefinitionIds')])]",
                    "roleDefinitionId": "[parameters('userManagedIdentityRoleDefinitionIds')[copyIndex('userManagedIdentityRoleAssignmentsDefinitionIds')]]"
                }
            }
        ],
        "logAnalyticsTableName": "[concat(parameters('logAnalyticsTableName'), '_CL')]",
        "slotContentShareName": "[format('{0}-{1}', parameters('functionAppName'), parameters('functionSlotName'))]",
        "isReserved": "[if(equals(parameters('functionPlanOS'), 'Linux'), true(), false())]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('userManagedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "copy": {
                "name": "roleAssignment",
                "count": "[length(variables('userManagedIdentityRoleAssignmentsDefinitionIds'))]"
            },
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('userManagedIdentityRoleAssignmentsDefinitionIds')[copyIndex()].name]",
            "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))).principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('userManagedIdentityRoleAssignmentsDefinitionIds')[copyIndex()].roleDefinitionId)]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))]"
            ]
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": false
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        // {
        //     "type": "Microsoft.OperationalInsights/workspaces/tables",
        //     "apiVersion": "2021-12-01-preview",
        //     "name": "[concat(parameters('logAnalyticsWorkspaceName'), '/', variables('logAnalyticsTableName'))]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
        //     ],
        //     "properties": {
        //         "totalRetentionInDays": 30,
        //         "plan": "Analytics",
        //         "schema": {
        //             "name": "[variables('logAnalyticsTableName')]",
        //             "columns": [
        //                 {
        //                     "name": "TimeGenerated",
        //                     "type": "datetime"
        //                 },
        //                 {
        //                     "name": "subType_s",
        //                     "type": "string"
        //                 },
        //                 {
        //                     "name": "type_s",
        //                     "type": "string"
        //                 },
        //                 {
        //                     "name": "entityId_s",
        //                     "type": "string"
        //                 },
        //                 {
        //                     "name": "jsonAsString_s",
        //                     "type": "string"
        //                 }
        //             ]
        //         },
        //         "retentionInDays": 30
        //     }
        // },
        {
            "comments": "Microsoft Sentinel",
            "type": "Microsoft.SecurityInsights/onboardingStates",
            "apiVersion": "2021-03-01-preview",
            "name": "default",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {},
            "scope": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
        },
        {
            "name": "[guid(uniqueString(subscription().subscriptionId, resourceGroup().id, parameters('sentinelWorkbookName')))]",
            "type": "microsoft.insights/workbooks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2021-03-08",
            "dependsOn": [
                "default"
            ],
            "kind": "shared",
            "properties": {
                "displayName": "[parameters('sentinelWorkbookName')]",
                "serializedData": "{\"version\": \"Notebook\/1.0\",\"items\": [{\"type\": 11,\"content\": {\"version\": \"LinkItem\/1.0\",\"style\": \"tabs\",\"links\": [{\"id\": \"4ea919be-c4af-4815-8c8f-9bf418d12f8e\",\"cellValue\": \"setTab\",\"linkTarget\": \"parameter\",\"linkLabel\": \"Overview\",\"subTarget\": \"Overview\",\"style\": \"link\"},{\"id\": \"ac85e0b9-f727-4547-967e-40fedbe27d88\",\"cellValue\": \"setTab\",\"linkTarget\": \"parameter\",\"linkLabel\": \"Drivers\",\"subTarget\": \"Drivers\",\"style\": \"link\"},{\"id\": \"7236fddd-9e8f-4f43-910d-a1812da7bd3e\",\"cellValue\": \"setTab\",\"linkTarget\": \"parameter\",\"linkLabel\": \"Vehicle Inventory\",\"subTarget\": \"Vehicles\",\"style\": \"link\"},{\"id\": \"7ef0ac4f-01d3-4839-86b4-80cbce5b5977\",\"cellValue\": \"setTab\",\"linkTarget\": \"parameter\",\"linkLabel\": \"Sbom\",\"subTarget\": \"Sbom\",\"style\": \"link\"},{\"id\": \"a5109791-292d-4ee0-abdc-29d32d7b65df\",\"cellValue\": \"setTab\",\"linkTarget\": \"parameter\",\"linkLabel\": \"Maintenance\",\"subTarget\": \"Maintenance\",\"style\": \"link\"}]},\"name\": \"links - 7\"},{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 9,\"content\": {\"version\": \"KqlParameterItem\/1.0\",\"parameters\": [{\"id\": \"cee69759-5e35-4e51-9fcd-e5fa0f0d8b6b\",\"version\": \"KqlParameterItem\/1.0\",\"name\": \"StatusTypes\",\"label\": \"Status\",\"type\": 2,\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| distinct Status = tostring(Vehicle[\\\"status\\\"])\\r\\n\",\"typeSettings\": {\"additionalResourceOptions\": [],\"showDefault\": false},\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"value\": null},{\"id\": \"28c59d15-72b9-4d85-8559-d4a98a551870\",\"version\": \"KqlParameterItem\/1.0\",\"name\": \"MakeTypes\",\"label\": \"Make\",\"type\": 2,\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| distinct Make = tostring(Vehicle[\\\"make\\\"])\",\"typeSettings\": {\"additionalResourceOptions\": [],\"showDefault\": false},\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"value\": null},{\"id\": \"ea562ecd-56a9-46ca-9831-a3f5b90e5f4b\",\"version\": \"KqlParameterItem\/1.0\",\"name\": \"EngineTypes\",\"label\": \"EngineType\",\"type\": 2,\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| distinct EngineType = tostring(Vehicle[\\\"parts\\\"][\\\"Engine\\\"][\\\"type\\\"])\\r\\n\",\"typeSettings\": {\"additionalResourceOptions\": [],\"showDefault\": false},\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"value\": null}],\"style\": \"pills\",\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\"},\"name\": \"parameters - 6\"},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"\/\/ Vehicle inventory\\r\\nAW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by VehicleId\\r\\n| extend Make = tostring(Vehicle[\\\"make\\\"])\\r\\n| where Make == '{MakeTypes}' or isempty('{MakeTypes}')\\r\\n| extend EngineType = tostring(Vehicle[\\\"parts\\\"][\\\"Engine\\\"][\\\"type\\\"])\\r\\n| where EngineType == '{EngineTypes}' or isempty('{EngineTypes}')\\r\\n| extend Status = tostring(Vehicle[\\\"status\\\"])\\r\\n| where Status == '{StatusTypes}' or isempty('{StatusTypes}')\\r\\n| project \\r\\nVehicleId,\\r\\nStatus,\\r\\nMake,\\r\\nEngineType,\\r\\nModel = tostring(Vehicle[\\\"model\\\"]),\\r\\nSerialNumber = tostring(Vehicle[\\\"serialNumber\\\"]),\\r\\nYear = tostring(Vehicle[\\\"year\\\"]),\\r\\nColor = tostring(Vehicle[\\\"color\\\"]),\\r\\nKilometers = tostring(Vehicle[\\\"kilometers\\\"]),\\r\\nVehicleType = tostring(Vehicle[\\\"vehicleType\\\"]),\\r\\nIsAvailable = tostring(Vehicle[\\\"isAvailable\\\"]),\\r\\nBattery = tostring(Vehicle[\\\"battery\\\"]),\\r\\nComputer = tostring(Vehicle[\\\"parts\\\"][\\\"Computer\\\"]),\\r\\nEngine = tostring(Vehicle[\\\"parts\\\"][\\\"Engine\\\"]),\\r\\nTires = tostring(Vehicle[\\\"parts\\\"][\\\"Tires\\\"])\",\"size\": 0,\"timeContext\": {\"durationMs\": 604800000},\"exportedParameters\": [{\"fieldName\": \"Make\",\"parameterName\": \"Make\",\"parameterType\": 1,\"defaultValue\": \"All\"},{\"fieldName\": \"EngineType\",\"parameterName\": \"EngineType\",\"parameterType\": 1,\"defaultValue\": \"All\"}],\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"table\",\"gridSettings\": {\"formatters\": [{\"columnMatch\": \"Status\",\"formatter\": 18,\"formatOptions\": {\"thresholdsOptions\": \"icons\",\"thresholdsGrid\": [{\"operator\": \"contains\",\"thresholdValue\": \"Faulty\",\"representation\": \"3\",\"text\": \"{0}{1}\"},{\"operator\": \"contains\",\"thresholdValue\": \"Parking\",\"representation\": \"1\",\"text\": \"{0}{1}\"},{\"operator\": \"Default\",\"thresholdValue\": null,\"representation\": \"success\",\"text\": \"{0}{1}\"}]}}]}},\"name\": \"query - 2\"},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by VehicleId\\r\\n| extend Make = tostring(Vehicle[\\\"make\\\"])\\r\\n| where Make == '{Make}' or 'All' == '{Make}'\\r\\n| extend EngineType = tostring(Vehicle[\\\"parts\\\"][\\\"Engine\\\"][\\\"type\\\"])\\r\\n| summarize ['{Make}'] = count() by Make\\r\\n\",\"size\": 0,\"title\": \"Make\",\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"piechart\"},\"customWidth\": \"50\",\"name\": \"query - 5\"},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by VehicleId\\r\\n| extend EngineType = tostring(Vehicle[\\\"parts\\\"][\\\"Engine\\\"][\\\"type\\\"])\\r\\n| where EngineType == '{EngineType}' or 'All' == '{EngineType}'\\r\\n| summarize ['{EngineType}'] = count() by EngineType\\r\\n\",\"size\": 0,\"title\": \"EngineType\",\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"piechart\"},\"customWidth\": \"50\",\"name\": \"query - 5 - Copy\"}]},\"conditionalVisibility\": {\"parameterName\": \"setTab\",\"comparison\": \"isEqualTo\",\"value\": \"Vehicles\"},\"name\": \"VehiclesInventory\"},{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"title\": \"Driver list\",\"items\": [{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"AW_CL \\r\\n| where type_s == \\\"Driver\\\"\\r\\n| extend DriverId = entityId_s\\r\\n| extend Driver = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by DriverId\\r\\n| project \\r\\nDriverId,\\r\\nName = Driver[\\\"name\\\"],\\r\\nTachograph = Driver[\\\"tachograph\\\"],\\r\\nRestTime = Driver[\\\"restTime\\\"],\\r\\nHasAssignment = isnotempty(Driver[\\\"assignment\\\"])\",\"size\": 0,\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\"},\"name\": \"query - 1\"}]},\"name\": \"group - 1\"}]},\"conditionalVisibility\": {\"parameterName\": \"setTab\",\"comparison\": \"isEqualTo\",\"value\": \"Drivers\"},\"name\": \"Drivers\"},{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"\/\/ Tires by year\\r\\nAW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| summarize arg_max(TimeGenerated, *) by VehicleId\\r\\n| extend Tires = todynamic(tostring(Vehicle[\\\"parts\\\"][\\\"Tires\\\"]))\\r\\n| mv-expand Tire = Tires\\r\\n| evaluate bag_unpack(Tire)\\r\\n| extend TireYear = coalesce(leftFront[\\\"year\\\"], leftRear[\\\"year\\\"], rightFront[\\\"year\\\"], rightRear[\\\"year\\\"], spare[\\\"year\\\"])\\r\\n| extend Faulty = coalesce(leftFront[\\\"isFaulty\\\"], leftRear[\\\"isFaulty\\\"], rightFront[\\\"isFaulty\\\"], rightRear[\\\"isFaulty\\\"], spare[\\\"isFaulty\\\"])\\r\\n| summarize count() by tostring(TireYear), tobool(Faulty)\",\"size\": 0,\"title\": \"Tires by year\",\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"barchart\"},\"customWidth\": \"50\",\"name\": \"queyr\"}]},\"name\": \"Tires\"}]},\"conditionalVisibility\": {\"parameterName\": \"setTab\",\"comparison\": \"isEqualTo\",\"value\": \"Maintenance\"},\"name\": \"Maintenance\"},{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"let MultimediaFirmware = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend OS = Vehicle[\\\"parts\\\"][\\\"Multimedia\\\"][\\\"firmware\\\"]\\r\\n| where isnotempty(OS)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| project Part = \\\"Multimedia\\\", Vendor = OS[\\\"vendor\\\"], Version = OS[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Vendor), tostring(Version);\\r\\nlet ComputerFirmware = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend OS = Vehicle[\\\"parts\\\"][\\\"Computer\\\"][\\\"firmware\\\"]\\r\\n| where isnotempty(OS)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| project Part = \\\"Computer\\\", Vendor = OS[\\\"vendor\\\"], Version = OS[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Vendor), tostring(Version);\\r\\nMultimediaFirmware\\r\\n| union ComputerFirmware\\r\\n| project-away count_\",\"size\": 4,\"title\": \"Firmware\",\"timeContext\": {\"durationMs\": 604800000},\"exportedParameters\": [{\"fieldName\": \"Part\",\"parameterName\": \"Part\",\"parameterType\": 1},{\"fieldName\": \"Version\",\"parameterName\": \"Version\",\"parameterType\": 1},{\"fieldName\": \"Vendor\",\"parameterName\": \"Vendor\",\"parameterType\": 1}],\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\"},\"customWidth\": \"50\",\"name\": \"query - 3 - Copy - Copy\"},{\"type\": 11,\"content\": {\"version\": \"LinkItem\/1.0\",\"style\": \"toolbar\",\"links\": [{\"id\": \"ef8afd09-b910-4fcd-b1df-8dd1732f2ed8\",\"cellValue\": \"?part={Part}&vendor={Vendor}&version={Version}\",\"linkTarget\": \"ArmAction\",\"linkLabel\": \"Upgrade Firmware\",\"preText\": \"\",\"postText\": \"\",\"style\": \"secondary\",\"icon\": \"uninitialized\",\"linkIsContextBlade\": true,\"armActionContext\": {\"path\": \"\/subscriptions\/81de6a21-8799-4bb5-a28c-cbc292f8e023\/resourceGroups\/automotive-world\/providers\/Microsoft.Logic\/workflows\/ala-aw-firmware\/triggers\/request\/run?api-version=2016-06-01\",\"headers\": [],\"params\": [{\"key\": \"part\",\"value\": \"{Part}\"},{\"key\": \"vendor\",\"value\": \"{Vendor}\"},{\"key\": \"version\",\"value\": \"{Version}\"}],\"httpMethod\": \"POST\",\"description\": \"# Actions can potentially modify resources.\\n## Please use caution and include a confirmation message in this description when authoring this command.\"}}]},\"customWidth\": \"20\",\"conditionalVisibility\": {\"parameterName\": \"Vendor\",\"comparison\": \"isNotEqualTo\"},\"name\": \"links - 6\"},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"let MultimediaOS = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend OS = Vehicle[\\\"parts\\\"][\\\"Multimedia\\\"][\\\"operatingSystem\\\"]\\r\\n| where isnotempty(OS)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| project Part = \\\"Multimedia\\\", Architecture = OS[\\\"architecture\\\"], Platform = OS[\\\"platform\\\"], Version = OS[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Architecture), tostring(Platform), tostring(Version);\\r\\nlet ComputerOS = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend OS = Vehicle[\\\"parts\\\"][\\\"Computer\\\"][\\\"operatingSystem\\\"]\\r\\n| where isnotempty(OS)\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| project Part = \\\"Computer\\\", Architecture = OS[\\\"architecture\\\"], Platform = OS[\\\"platform\\\"], Version = OS[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Architecture), tostring(Platform), tostring(Version);\\r\\nMultimediaOS\\r\\n| union ComputerOS\\r\\n| project-away count_\",\"size\": 4,\"title\": \"Operation System\",\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\"},\"customWidth\": \"50\",\"name\": \"query - 3 - Copy\"},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"let MultimediaApplications = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend applications = Vehicle[\\\"parts\\\"][\\\"Multimedia\\\"][\\\"applications\\\"]\\r\\n| where isnotempty(applications)\\r\\n| mv-expand Application = applications\\r\\n| project Part = \\\"Multimedia\\\", Name = Application[\\\"name\\\"], Version = Application[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Name), tostring(Version);\\r\\nlet ComputerApplications = AW_CL\\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend applications = Vehicle[\\\"parts\\\"][\\\"Computer\\\"][\\\"applications\\\"]\\r\\n| where isnotempty(applications)\\r\\n| mv-expand Application = applications\\r\\n| project Part = \\\"Computer\\\", Name = Application[\\\"name\\\"], Version = Application[\\\"version\\\"]\\r\\n| summarize count() by Part, tostring(Name), tostring(Version);\\r\\nMultimediaApplications\\r\\n| union ComputerApplications\\r\\n| project-away count_\\r\\n\",\"size\": 4,\"title\": \"Applications\",\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\"},\"customWidth\": \"50\",\"name\": \"query - 3\"}]},\"conditionalVisibility\": {\"parameterName\": \"setTab\",\"comparison\": \"isEqualTo\",\"value\": \"Sbom\"},\"name\": \"Sbom\"},{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 12,\"content\": {\"version\": \"NotebookGroup\/1.0\",\"groupType\": \"editable\",\"items\": [{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"AW_CL \\r\\n| where type_s in (\\\"Vehicle\\\", \\\"Driver\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by entityId_s\\r\\n| summarize count() by type_s\",\"size\": 0,\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"barchart\",\"graphSettings\": {\"type\": 0,\"topContent\": {\"columnMatch\": \"type_s\",\"formatter\": 1},\"centerContent\": {\"columnMatch\": \"count_\",\"formatter\": 1,\"numberFormat\": {\"unit\": 17,\"options\": {\"maximumSignificantDigits\": 3,\"maximumFractionDigits\": 2}}}}},\"customWidth\": \"50\",\"name\": \"query - 3\",\"styleSettings\": {\"maxWidth\": \"100\"}},{\"type\": 3,\"content\": {\"version\": \"KqlItem\/1.0\",\"query\": \"AW_CL \\r\\n| where type_s == \\\"Vehicle\\\"\\r\\n| extend VehicleId = entityId_s\\r\\n| extend Vehicle = parse_json(jsonAsString_s)\\r\\n| extend Location = tostring(Vehicle[\\\"location\\\"])\\r\\n| summarize arg_max(TimeGenerated, *) by VehicleId\\r\\n| where isnotempty(Location)\\r\\n| summarize count() by Location\\r\\n\",\"size\": 0,\"timeContext\": {\"durationMs\": 604800000},\"queryType\": 0,\"resourceType\": \"microsoft.operationalinsights\/workspaces\",\"visualization\": \"map\",\"mapSettings\": {\"locInfo\": \"CountryRegion\",\"locInfoColumn\": \"Location\",\"latitude\": \"Location\",\"sizeSettings\": \"count_\",\"sizeAggregation\": \"Sum\",\"labelSettings\": \"Location\",\"legendMetric\": \"count_\",\"legendAggregation\": \"Sum\",\"itemColorSettings\": {\"nodeColorField\": \"count_\",\"colorAggregation\": \"Sum\",\"type\": \"heatmap\",\"heatmapPalette\": \"categorical\"}}},\"customWidth\": \"50\",\"name\": \"query - 4\"}]},\"name\": \"Overview\"}]},\"conditionalVisibility\": {\"parameterName\": \"setTab\",\"comparison\": \"isEqualTo\",\"value\": \"Overview\"},\"name\": \"Overview\"}],\"fallbackResourceIds\": [\"\/subscriptions\/81de6a21-8799-4bb5-a28c-cbc292f8e023\/resourcegroups\/automotive-world\/providers\/microsoft.operationalinsights\/workspaces\/la-aw\"],\"fromTemplateId\": \"sentinel-UserWorkbook\",\"$schema\": \"https:\/\/github.com\/Microsoft\/Application-Insights-Workbooks\/blob\/master\/schema\/workbook.json\"\r\n}",
                "version": "1.0",
                "sourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "category": "sentinel"
            }
        },
        {
            "comments": "Microsoft Defender for IoT connector",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "apiVersion": "2022-12-01-preview",
            "name": "[concat(parameters('logAnalyticsWorkspaceName'),'/Microsoft.SecurityInsights/', 'iot', uniqueString(resourceGroup().id))]",
            "kind": "IOT",
            "properties": {
                "subscriptionId": "[subscription().subscriptionId]",
                "tenantId": "[subscription().tenantId]",
                "dataTypes": {
                    "alerts": {
                        "state": "enabled"
                    }
                }
            }
        },
        {
            "comments": "Application Insights",
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "Flow_Type": "Bluefield",
                "Request_Source": "CustomDeployment",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('serverfarmName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 0,
                "isSpot": false,
                "reserved": "[variables('isReserved')]",
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
            "properties": {
                "reserved": "[variables('isReserved')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[if(variables('isReserved'), parameters('functionLinuxFxVersion'), json('null'))]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[parameters('functionWorkerRuntime')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/slots",
            "apiVersion": "2022-03-01",
            "name": "[format('{0}/{1}', parameters('functionAppName'), parameters('functionSlotName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))]": {}
                }
            },
            "properties": {
                "reserved": "[variables('isReserved')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[if(variables('isReserved'), parameters('functionLinuxFxVersion'), json('null'))]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('slotContentShareName')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[parameters('functionWorkerRuntime')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_ID",
                            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_RESOURCE_ID",
                            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_PRIMARY_KEY",
                            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_TABLE_NAME",
                            "value": "[parameters('logAnalyticsTableName')]"
                        },
                        {
                            "name": "SimulatorScheduleExpression",
                            "value": "0 */30 * * * *"
                        },
                        {
                            "name": "SimulateEventTriggerScheduleExpression",
                            "value": "0 */30 * * * *"
                        },
                        {
                            "name": "USER_ASSIGNED_MANAGED_IDENTITY_CLIENT_ID",
                            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))).clientId]"
                        },
                        {
                            // Enabled to get function secrets from workbook, https://learn.microsoft.com/en-us/rest/api/appservice/web-apps/list-function-secrets-slot
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        }
                    ]
                }
            }
        },
         {
            "apiVersion": "2016-10-01",
            "name": "[parameters('automationLogicAppName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "request": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Initialize_Sbom_vendor_variable": [
                                    "Succeeded"
                                ],
                                "Initialize_Sbom_part_variable": [
                                    "Succeeded"
                                ],
                                "Initialize_Sbom_version_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "[concat('https://', variables('slotContentShareName'), '.azurewebsites.net/api/UpgradeFirmware?part=@{variables(''part'')}&vendor=@{variables(''vendor'')}&version=@{variables(''version'')}')]"
                            }
                        },
                        "Initialize_Sbom_vendor_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "vendor",
                                        "type": "string",
                                        "value": "@{triggerOutputs()['queries']['vendor']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Sbom_part_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "part",
                                        "type": "string",
                                        "value": "@triggerOutputs()['queries']['part']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Sbom_version_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "version",
                                        "type": "string",
                                        "value": "@triggerOutputs()['queries']['version']"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {},
                "state": "Enabled"
            }
        },
        {
            "condition": "[not(empty(parameters('packageUri')))]",
            "type": "Microsoft.Web/sites/slots/extensions",
            "apiVersion": "2021-03-01",
            "name": "[format('{0}/{1}/ZipDeploy', parameters('functionAppName'), parameters('functionSlotName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('functionAppName'), parameters('functionSlotName'))]"
            ],
            "properties": {
                "packageUri": "[parameters('packageUri')]"
            }
        }
    ]
}