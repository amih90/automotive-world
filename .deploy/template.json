{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "userManagedIdentityName": {
            "type": "String"
        },
        "userManagedIdentityRoleDefinitionIds": {
            "type": "array",
            "metadata": {
                "description": "The IDs of the role definitions to assign to the managed identity. Each role assignment is created at the resource group scope. Role definition IDs are GUIDs. To find the GUID for built-in Azure role definitions, see https://docs.microsoft.com/azure/role-based-access-control/built-in-roles. You can also use IDs of custom role definitions."
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "String"
        },
        "logAnalyticsTableName": {
            "type": "String"
        },
        "applicationInsightsName": {
            "type": "String"
        },
        "storageAccountName": {
            "type": "String"
        },
        "serverfarmName": {
            "type": "String"
        },
        "functionAppName": {
            "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "The name of the Azure Function app."
            }
        },
        "functionSlotName": {
            "defaultValue": "deployment",
            "type": "String",
            "metadata": {
                "description": "The name of the slot for Azure Function app."
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "functionWorkerRuntime": {
            "defaultValue": "dotnet",
            "allowedValues": [
                "dotnet",
                "node",
                "python",
                "java"
            ],
            "type": "String",
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        },
        "functionPlanOS": {
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "type": "String",
            "metadata": {
                "description": "Specifies the OS used for the Azure Function hosting plan."
            }
        },
        "packageUri": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "The zip content url."
            }
        },
        "functionLinuxFxVersion": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Only required for Linux app to represent runtime stack in the format of 'runtime|runtimeVersion'. For example: 'python|3.9'"
            }
        },
        "enableDataConnectorsKind": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "The kind of data connectors that can be deployed via ARM templates are the following: [\"AzureActivityLog\",\"SecurityInsightsSecurityEventCollectionConfiguration\",\"WindowsFirewall\",\"DnsAnalytics\"], Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
            }
        }
    },
    "variables": {
        "copy": [
            {
                "name": "userManagedIdentityRoleAssignmentsDefinitionIds",
                "count": "[length(parameters('userManagedIdentityRoleDefinitionIds'))]",
                "input": {
                    "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName')), resourceGroup().id, parameters('userManagedIdentityRoleDefinitionIds')[copyIndex('userManagedIdentityRoleAssignmentsDefinitionIds')])]",
                    "roleDefinitionId": "[parameters('userManagedIdentityRoleDefinitionIds')[copyIndex('userManagedIdentityRoleAssignmentsDefinitionIds')]]"
                }
            }
        ],
        "logAnalyticsTableName": "[concat(parameters('logAnalyticsTableName'), '_CL')]",
        "slotContentShareName": "[format('{0}-{1}', parameters('functionAppName'), parameters('functionSlotName'))]",
        "isReserved": "[if(equals(parameters('functionPlanOS'), 'Linux'), true(), false())]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('userManagedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "copy": {
                "name": "roleAssignment",
                "count": "[length(variables('userManagedIdentityRoleAssignmentsDefinitionIds'))]"
            },
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('userManagedIdentityRoleAssignmentsDefinitionIds')[copyIndex()].name]",
            "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))).principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('userManagedIdentityRoleAssignmentsDefinitionIds')[copyIndex()].roleDefinitionId)]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))]"
            ]
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": false
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2021-12-01-preview",
            "name": "[concat(parameters('logAnalyticsWorkspaceName'), '/', variables('logAnalyticsTableName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "totalRetentionInDays": 30,
                "plan": "Analytics",
                "schema": {
                    "name": "[variables('logAnalyticsTableName')]",
                    "columns": [
                        {
                            "name": "TimeGenerated",
                            "type": "datetime"
                        },
                        {
                            "name": "subType_s",
                            "type": "string"
                        },
                        {
                            "name": "type_s",
                            "type": "string"
                        },
                        {
                            "name": "entityId_s",
                            "type": "string"
                        },
                        {
                            "name": "jsonAsString_s",
                            "type": "string"
                        }
                    ]
                },
                "retentionInDays": 30
            }
        },
        {
            "comments": "Microsoft Sentinel",
            "type": "Microsoft.SecurityInsights/onboardingStates",
            "apiVersion": "2021-03-01-preview",
            "name": "default",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {},
            "scope": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
        },
        {
            "comments": "Microsoft Defender for IoT connector",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "apiVersion": "2022-12-01-preview",
            "name": "[concat(parameters('logAnalyticsWorkspaceName'),'/Microsoft.SecurityInsights/', 'iot', uniqueString(resourceGroup().id))]",
            "kind": "IOT",
            "properties": {
                "subscriptionId": "[subscription().subscriptionId]",
                "tenantId": "[subscription().tenantId]",
                "dataTypes": {
                    "alerts": {
                        "state": "enabled"
                    }
                }
            }
        },
        {
            "comments": "Application Insights",
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "Flow_Type": "Bluefield",
                "Request_Source": "CustomDeployment",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('serverfarmName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 0,
                "isSpot": false,
                "reserved": "[variables('isReserved')]",
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
            "properties": {
                "reserved": "[variables('isReserved')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[if(variables('isReserved'), parameters('functionLinuxFxVersion'), json('null'))]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[parameters('functionWorkerRuntime')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/slots",
            "apiVersion": "2022-03-01",
            "name": "[format('{0}/{1}', parameters('functionAppName'), parameters('functionSlotName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userManagedIdentityName'))]": {}
                }
            },
            "properties": {
                "reserved": "[variables('isReserved')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[if(variables('isReserved'), parameters('functionLinuxFxVersion'), json('null'))]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('slotContentShareName')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[parameters('functionWorkerRuntime')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_ID",
                            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_RESOURCE_ID",
                            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_PRIMARY_KEY",
                            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                        },
                        {
                            "name": "LOG_ANALYTICS_WORKSPACE_TABLE_NAME",
                            "value": "[parameters('logAnalyticsTableName')]"
                        },
                        {
                            "name": "SimulatorScheduleExpression",
                            "value": "*/30 * * * *"
                        },
                        {
                            "name": "SimulateEventTriggerScheduleExpression",
                            "value": "*/30 * * * *"
                        }
                    ]
                }
            }
        },
        {
            "condition": "[not(empty(parameters('packageUri')))]",
            "type": "Microsoft.Web/sites/slots/extensions",
            "apiVersion": "2021-03-01",
            "name": "[format('{0}/{1}/ZipDeploy', parameters('functionAppName'), parameters('functionSlotName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('functionAppName'), parameters('functionSlotName'))]"
            ],
            "properties": {
                "packageUri": "[parameters('packageUri')]"
            }
        }
    ]
}